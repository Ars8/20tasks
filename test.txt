Test 1
1. При добавлении других полей массива, помимо name, в первом случае возникнет путаница.
2. Чтобы вывод массива не изменять(например не вносить корректировки в верстку).
3. Поля которые повторяются по смыслу, но меняется их значение.
4. Чтобы возможно было вставить элементы массива.
5. Создаем в массиве поле "style" со значением для первого элемента ”padding: 20px;” для второго ”padding: 30px;”, а для третьего оставляем пустое значение.
6. Во втором случае удобнее работать с версткой.
7. Не использовал в коде. Удобно использовать если надо записать условие в одну строку и кратко. Например стили.

Test 2
1. В тэге form - атрибут action указать адрес обработчика, атрибут method указать post, 
    в тэге input - type, name, multiple.
2. Обработчик это модуль который принимает данные из формы и проводит определенные манипуляции с этими данными.
Выделять в отдельный файл - может быть несколько обработчиков на одной странице. Путается логика.
3. Методы get и post. get - данные отправленные из формы видны в адресной строке, в post не видно.
4. Создать объект pdo подключения к бд, написать запрос SQL и сохранить в переменную, подготовить запрос, выполнить запрос.
5. Глобальный массив $_SESSION.
6. В $_SESSION сохранить значение сообщения можно с ключом $_SESSION['key_name'] (значение-текст сообщения можно взять из бд или задать самому).
В Виде view задать условие при котором необходимо выводить сообщение и взять значение из глобального массива $_SESSION с ключом ['key'].
7. С помощью встроенной функции php is_email(), поставить тип <input type="email/>" или написать самому функцию используя регулярные выражения.
8. hash_password
9. При утечке данных из бд хеш пароля трудно применить для доступов.
10. Сервер не сохраняет данные, в сессию можно сохранить данные(на время сеанса сессии).
11. Получаем данные с форм логин и пароль. отправляем запрос на получение логина, если логин не найден то выкидываем ошибку что неверный логин или пароль,
если логин найден то делаем запрос на получение хеша пароля данного пользователя из бд, хешируем пароль полученный из формы и сравниваем с полученным из бд.
если не совпали хеши паролей выкидываем ошибку неверный логин или пароль, если совпали то пользователь авторизован, записываем в $_SESSION['isAuth'] = true 
что пользователь авторизован.
12. Установить для тэга form - action путь до обработчика, enctype тип данных, method="post",
для тэга input установить type="тип файла" name="ключ по которому можно получить данные".
13. name="ключ[]"
14. с помощью функции генериции uniqid()
15. move_uploaded_file
16. $_FILES
17. $_FILES["file"]["name"]: имя файла
    $_FILES["file"]["type"]: тип содержимого файла, например, image/jpeg
    $_FILES["file"]["size"]: размер файла в байтах
    $_FILES["file"]["tmp_name"]: имя временного файла, сохраненного на сервере
    $_FILES["file"]["error"]: код ошибки при загрузке
18. Неверно составляется имя файла
19. Неверно указан тип индекса массива
20. Не хватает закрывающей - ;
21. Скорее всего не указан адрес обработчика ,неправильно (или не указан) method="post".
22. Областью видимости
23. Пиши не для себя, представь что напишешь и уйдешь а работать с кодом будет другой человек.
24. Написать алгоритм на бумаге(эл. файле) или нарисовать алгоритм.
25. $_SESSION доступно только на сервере, $_COOKIE доступно и в браузере и на сервере.
26. Больше практики, порционно: видео - практика, от простого к сложному.
27. Очень интересно, нет демотивирующих заданий, постепенно от простого с сложному, но главное - мне не хватало этого подхода.